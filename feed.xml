<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jekyll-fr</title>
    <description>Communauté francophone des utilisateurs de Jekyll</description>
    <link>http://jekyll-fr.org//</link>
    <atom:link href="http://jekyll-fr.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 08 Oct 2016 19:25:51 +0200</pubDate>
    <lastBuildDate>Sat, 08 Oct 2016 19:25:51 +0200</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>Les nouveautés de Jekyll 3.3</title>
        <description>&lt;p&gt;Plein de nouveautés pour vous simplifier la vie dans la version 3.3 de Jekyll.
On retiendra trois fonctionnalités à tester en priorité :&lt;/p&gt;

&lt;h2 id=&quot;les-themes-peuvent-dsormais-fournir-des-assets-statiques-et-dynamiques-dans-le-dossier-assets&quot;&gt;Les themes peuvent désormais fournir des assets statiques et dynamiques dans le dossier &lt;code class=&quot;highlighter-rouge&quot;&gt;/assets&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Depuis Jekyll 3.2, il est possible de packager un thème sous forme de
&lt;a href=&quot;http://guides.rubygems.org/&quot;&gt;gem&lt;/a&gt;, il était déjà possible d’embarquer des includes, des layouts et des fichiers Sass. Avec la version 3.3, il est enfin possible d’ajouter aussi des assets à son thème. Les développeurs de thèmes vont donc pouvoir fournir des thèmes complets et les utilisateurs pourront les tester et les mettre à jour plus simplement. Cette fonctionnalité n’est pas encore très mature et le support de fichier de configuration pour les thèmes ou l’ajout d’un dossier &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; sont en cours de discussion.&lt;/p&gt;

&lt;p&gt;Pour faciliter davantage la gestion de thème, tout fichier présent dans le dossier
&lt;code class=&quot;highlighter-rouge&quot;&gt;/assets&lt;/code&gt; de votre thème sera considéré comme faisant partie du site de l’utilisateur du thème. Vous pouvez donc ajouter du Sass, du JavaScript, du CoffeeScript, des images, des fontes et tout ce qui sera utile à la présentation et au comportement de votre thème. Les régles sont les mêmes que dans Jekyll : si un fichier comporte des entêtes YAML Front Matter, il sera converti et traité par le moteur de rendu. Si le fichier ne comporte aucune entête YFM, il sera simplement copié comme un asset statique.&lt;/p&gt;

&lt;p&gt;Notez bien que les fichiers de l’utilisateur avec le même chemin prennent toujours le pas sur ceux de votre thème. Par exemple si un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;/assets/main.scss&lt;/code&gt; est présent dans le dossier du site de l’utilisateur, c’est lui qui sera traité en lieu et place du fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;/assets/main.scss&lt;/code&gt; présent dans la gem de votre thème.&lt;/p&gt;

&lt;p&gt;Nous vous invitons à vous reporter à la &lt;a href=&quot;https://jekyllrb.com/docs/themes/#assets&quot;&gt;documentation officielle sur la gestion des assets dans les thèmes&lt;/a&gt; pour plus d’information.&lt;/p&gt;

&lt;h2 id=&quot;les-filtres-relativeurl-et-absoluteurl&quot;&gt;Les filtres &lt;code class=&quot;highlighter-rouge&quot;&gt;relative_url&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;absolute_url&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Deux nouveaux filtres font leur apparition pour simplifier la gestion des URLs dans vos templates. Fini de vous emmêler les pinceaux avec &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;. Lorsque vous développez en local, si vous définissez la valeur de &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt; afin qu’elle corresponde à votre environnement de développment, mettons par exemple &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl: &quot;/mondossier&quot;&lt;/code&gt;, le filtre &lt;code class=&quot;highlighter-rouge&quot;&gt;relative_url&lt;/code&gt; se chargera de préfixer cette valeur pour toutes les URLs que vous appelerez :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/docs/assets/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;relative_url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; =&amp;gt; /mondossier/docs/assets&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Par défaut, &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt; est défini à &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt; et sera remplacé tel quel (ne définissez jamais cette valeur à &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;/&quot;&lt;/code&gt;):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/docs/assets/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;relative_url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; =&amp;gt; /docs/assets&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Le résultat d’un appel à &lt;code class=&quot;highlighter-rouge&quot;&gt;relative_url&lt;/code&gt; produira toujours une URL relative au domaine racine.
Le même principe s’applique au filtre &lt;code class=&quot;highlighter-rouge&quot;&gt;absolute_url&lt;/code&gt;, il ajoute les valeurs définies dans &lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; et facilite ainsi la création d’URLs absolues :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/docs/assets/&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;absolute_url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; =&amp;gt; http://jekyll-fr.org/mondossier/docs/assets&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;siteurl-est-maintenant-dfini-pour-le-serveur-de-dveloppement&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site.url&lt;/code&gt; est maintenant défini pour le serveur de développement&lt;/h2&gt;

&lt;p&gt;Quand vous lancez la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; en local, elle va démarrer un serveur web, généralement à l’adresse &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt;, sur lequel vous allez pouvoir prévisualiser votre site durant la phase de développement. Si vous utilisez le filtre &lt;code class=&quot;highlighter-rouge&quot;&gt;absolute_url&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;site.url&lt;/code&gt; dans votre code, vous avez probablement du créer un fichier de configuration pour le développement, qui va réinitialiser la valeur d’&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; à &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;C’est maintenant inutile ! Quand vous lancez la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, Jekyll va générer votre site avec les valeurs de &lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;port&lt;/code&gt; et des options relatives à SSL. Par défaut ce sera donc
&lt;code class=&quot;highlighter-rouge&quot;&gt;url: http://localhost:4000&lt;/code&gt;. Quand vous développez en local, la valeur de &lt;code class=&quot;highlighter-rouge&quot;&gt;site.url&lt;/code&gt; sera donc remplacée par &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;C’est le comportement par défaut lorsque vous exécutez Jekyll en local. Ce ne sera pas le cas si vous exécutez &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; si vous prévisez un environnement de production avec &lt;code class=&quot;highlighter-rouge&quot;&gt;JEKYLL_ENV=production&lt;/code&gt;. Si la variable d’environnement &lt;code class=&quot;highlighter-rouge&quot;&gt;JEKYLL_ENV&lt;/code&gt; possède une autre valeur que
&lt;code class=&quot;highlighter-rouge&quot;&gt;development&lt;/code&gt; (sa valeur par défaut), Jekyll n’écrasera pas la valeur du paramètre &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; défini dans votre fichier de configuration. Attention, cela ne s’applique qu’à la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;serve&lt;/code&gt;, pas à la commande build`.&lt;/p&gt;

&lt;h2 id=&quot;et-bien-plus-encore&quot;&gt;Et bien plus encore&lt;/h2&gt;

&lt;p&gt;Pour avoir le détail de tous les correctifs et les améliorations mineures apportées, vous pouvez &lt;a href=&quot;https://jekyllrb.com/docs/history/#v3-3-0&quot;&gt;consulter le CHANGELOG complet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jekyllez bien !&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Oct 2016 11:10:38 +0200</pubDate>
        <link>http://jekyll-fr.org/2016/10/07/jekyll-3-3-est-dispo/</link>
        <guid isPermaLink="true">http://jekyll-fr.org/2016/10/07/jekyll-3-3-est-dispo/</guid>
        
        
      </item>
    
      <item>
        <title>Utiliser des plugins Jekyll avec GitHub Pages</title>
        <description>&lt;p&gt;La popularité de Jekyll est en partie due à son support natif par GitHub Pages. Si cette solution gratuite est bien pratique, elle n’en reste pas moins limitée en terme de support de plugins Jekyll et ce pour des raisons de sécurité. Si vous voulez utiliser des plugins comme &lt;a href=&quot;/2016/08/31/gestion-images-responsive-avec-jekyll-cloudinary/&quot;&gt;jekyll-cloudinary&lt;/a&gt; ou &lt;a href=&quot;https://github.com/jekyll/jekyll-assets&quot;&gt;jekyll-assets&lt;/a&gt;, il vous faudra générer le site en local et le publier sur Github.&lt;/p&gt;

&lt;p&gt;Nous allons voir que cette opération est facilement automatisable à l’aide d’un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;Rakefile&lt;/code&gt;, la manière la plus courante en Ruby de créer des tâches.&lt;/p&gt;

&lt;h2 id=&quot;pr-requis&quot;&gt;Pré-requis&lt;/h2&gt;

&lt;p&gt;Nous partons du principe que vous avez déjà un site qui tourne avec Jekyll sur GitHub, si ce n’est pas le cas, reportez-vous à la &lt;a href=&quot;https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/&quot;&gt;documentation officielle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Comme nous allons utiliser &lt;code class=&quot;highlighter-rouge&quot;&gt;rake&lt;/code&gt; pour écrire une tâche automatisée, il vous faut ajoutez la dépendance à votre fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;, si elle n’est pas déjà présente :&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;rake&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Une fois que c’est fait, lancez &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt; pour installer &lt;code class=&quot;highlighter-rouge&quot;&gt;rake&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Maintenant que vous êtes parés sous allons voir les deux cas de figures possibles dans Github : les pages utilisateurs ou organisation et les pages projets.&lt;/p&gt;

&lt;h2 id=&quot;pages-utilisateur-et-organisation&quot;&gt;Pages utilisateur et organisation&lt;/h2&gt;

&lt;p&gt;Pour activer la génération automatique par GitHub Pages d’un dépôt de compte utilisateur ou organisation, il suffit de respecter la nomenclature  &lt;code class=&quot;highlighter-rouge&quot;&gt;username/username.github.io&lt;/code&gt;. Par exemple ce dépôt s’appelle &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-fr/jekyll-fr.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;GitHub va utiliser la branche &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; de ces dépôts et publier les pages. Cela fait que nous aurons une branche &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; qui contient le site généré et une branche &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; avec les sources de notre site.&lt;/p&gt;

&lt;h3 id=&quot;configuration-du-dpt&quot;&gt;Configuration du dépôt&lt;/h3&gt;

&lt;p&gt;La préparation du dépôt se résume à créer la branche &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; en ligne de commande :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -b source master
$ git push -u origin source
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Maintenant que vous avez crée la branche &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;, vous pouvez en faire la branche par &lt;em&gt;défaut&lt;/em&gt; dans GitHub :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/default-branch-github.png&quot; alt=&quot;Paramètrage des branches dans GitHub&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;publication-automatique&quot;&gt;Publication automatique&lt;/h3&gt;

&lt;p&gt;Maintenant que le dépôt est configuré, vous pouvez générer votre site et pousser les fichiers générés sur la branche &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;. Mais plutôt que de s’embêter à faire ça manuellement, créons un simple tâche &lt;code class=&quot;highlighter-rouge&quot;&gt;rake&lt;/code&gt;.
Créez (si vous n’en avez pas déjà un) un fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;Rakefile&lt;/code&gt; à la racine de votre site et ajoutez le contenu suivant &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; :&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/DirtyF/24cb9c96b64173ecd85578f38bcc940d.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Maintenant vous pouvez simplement lancer la commande &lt;code class=&quot;highlighter-rouge&quot;&gt;rake publish&lt;/code&gt; pour générer et publier votre site sur GitHub Pages.&lt;/p&gt;

&lt;p&gt;Si vous utilisez un nom de domaine personnalisé, vérifiez bien que le fichier CNAME est bien présent dans la branche générée.&lt;/p&gt;

&lt;h2 id=&quot;pages-projet&quot;&gt;Pages projet&lt;/h2&gt;

&lt;p&gt;Les pages projet sont presque pareilles que les pages utilisateur et organisation, à une différence près : la branche &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; est utilisée à la place de la branche &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; pour générer et publier les pages.&lt;/p&gt;

&lt;p&gt;Il n’y a aucune configuration supplémentaire à faire, il faut simplement apporter quelques petites modifications au fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;Rakefile&lt;/code&gt; :&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/DirtyF/2eacfb7ecec18b3b738af1c3c8d1fe5e.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Vous pouvez maintenant lancer &lt;code class=&quot;highlighter-rouge&quot;&gt;rake site:publish&lt;/code&gt; pour générer votre site et le publier sur GitHub. Jetez également un coup d’œil au &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/rake/site.rake#L55&quot;&gt;fichier Rakefile de Jekyll&lt;/a&gt; pour une implémentation alternation de la tâche &lt;code class=&quot;highlighter-rouge&quot;&gt;rake site:publish&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/octojekyll.png&quot; alt=&quot;octojekyll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Enfin, sachez qu’il existe d’autres solutions d’hébergement comme &lt;a href=&quot;https://pages.gitlab.io/&quot;&gt;GitLab Pages&lt;/a&gt;, &lt;a href=&quot;https://www.netlify.com&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;http://cloudcannon.com&quot;&gt;Cloudcannon&lt;/a&gt;, &lt;a href=&quot;https://www.siteleaf.com/&quot;&gt;Siteleaf&lt;/a&gt; ou &lt;a href=&quot;https://forestry.io/&quot;&gt;Forestry.io&lt;/a&gt; qui vous permettent d’utiliser les plugins de votre choix, sans avoir recours à ce genre de hack.&lt;/p&gt;

&lt;h3 id=&quot;notes&quot;&gt;Notes&lt;/h3&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Les tâches utilisées dans ce billet ont été écrites par &lt;a href=&quot;http://ixti.net/software/2013/01/28/using-jekyll-plugins-on-github-pages.html&quot;&gt;Ixti&lt;/a&gt;, le créateur du plugin &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-assets&lt;/code&gt;. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 18 Sep 2016 13:51:13 +0200</pubDate>
        <link>http://jekyll-fr.org/2016/09/18/utiliser-des-plugins-jekyll-avec-github-pages/</link>
        <guid isPermaLink="true">http://jekyll-fr.org/2016/09/18/utiliser-des-plugins-jekyll-avec-github-pages/</guid>
        
        
      </item>
    
      <item>
        <title>Gérer les images responsive dans Jekyll avec le plugin Cloudinary</title>
        <description>&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://cloudinary.com/blog/how_i_used_cloudinary_to_solve_responsive_image_needs_in_my_jekyll_website_and_shared_the_magic_in_a_plugin&quot;&gt;Read original English version of this post on Cloudinary’s blog &lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;J’ai récemment mis à jour &lt;a href=&quot;https://nicolas-hoizey.com&quot;&gt;mon site perso&lt;/a&gt; avec &lt;a href=&quot;https://jekyllrb.com/news/2015/10/26/jekyll-3-0-released/&quot;&gt;la dernière version de Jekyll&lt;/a&gt; et j’en ai profité pour changer quelques outils.&lt;/p&gt;

&lt;p&gt;Les plugins que j’utilisais ne répondaient pas à mes exigences pour les images reponsive, j’ai donc décidé de trouver d’autres moyens de satisfaire ces besoins.&lt;/p&gt;

&lt;p&gt;Pour générer le code HTML des images responsive (dois-je vous vraiment vous rappeler qu’utiliser les &lt;a href=&quot;https://responsiveimages.org/&quot;&gt;images responsive natives&lt;/a&gt; devrait ête un réflexe de nos jours ?), j’ai resté le plugin &lt;a href=&quot;https://github.com/wildlyinaccurate/jekyll-responsive-image&quot;&gt;Jekyll Responsive Image&lt;/a&gt;. Il est vraiment sympa, il vous laisse définir vos propres gabarits de balisage d’image, vous pouvez donc utiliser &lt;code class=&quot;highlighter-rouge&quot;&gt;srcset&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; selon votre envie. Mais il ne répondait à tous mes besoins :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lors de la première génération d’un site statique Jekyll avec ce plugin vous devez générer toutes les variantes à partir des images originales. J’ai actuellement environ 750 images sur mon blog et cela entraîne des temps de compilation extrêment longs,&lt;/li&gt;
  &lt;li&gt;Envoyer toutes ces variantes au serveur prend également du temps, car je n’ai pas un accès très rapide chez moi,&lt;/li&gt;
  &lt;li&gt;Et bien entendu toutes ces images sont servies sur le même serveur que les pages, dans mon cas sur un hébergement mutualisé sympa et bon marché.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Je voulais revenir à un workflow plus simple et plus rapide et qui génère moins de charge côté serveur.&lt;/p&gt;

&lt;p&gt;La plupart des sites web responsive que ma société développe pour ses client utilisent des solutions ad hoc pour les images responsive, mais j’avais connaissance de quelques solutions SaaS d’images responsive. J’ai donc décidé de voir si l’une d’entre elles pouvait répondre à mes besoins.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://cloudinary.com/&quot;&gt;Cloudinary&lt;/a&gt; est une des solutions disponibles qui offre le plus de fonctionnalités &lt;strong&gt;et&lt;/strong&gt; qui peut être utilisée gratuitement si vous avez des besoins légers. Difficile pour les autres solutions de rivaliser avec cette offre…&lt;/p&gt;

&lt;p&gt;Avec un compte gratuit, j’ai pu tester ce que je voulais, essayer différentes fonctionnalités et décider si je continuais ou si j’allais voir ailleurs.&lt;/p&gt;

&lt;p&gt;Les fonctions principales que je cherchais et que fournit Cloudinary sont :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://cloudinary.com/documentation/upload_images#auto_fetching_remote_images&quot;&gt;La possibilité d’utiliser le service comme un proxy&lt;/a&gt;:&lt;/strong&gt; les images originales sont stockées sur mon serveur, mais toutes les images servies à mes visiteurs le sont depuis Cloudinary, générées à la volée à partir des originales. Encore mieux, je n’ai pas besoin d’uploader les images originales - Cloudinary les récupère automatiquement à partir de mes versions publiées en local. Entre d’autres termes, le seul “client” pour mes images d’origine c’est Cloudinary. Du coup, je consomme très peu de bande passante pour mes images chez mon hébergeur.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Recadrage et options de redimensionnement des images :&lt;/strong&gt; actuellement, je ne fais que retailler mes images à partir des originaux en large résolution pour les adapter aux mises en page responsive. Je me penche sérieusement sur la possibilité de faire de la direction artistique avancée à l’aide des &lt;a href=&quot;http://cloudinary.com/blog/introducing_smart_cropping_intelligent_quality_selection_and_automated_responsive_images&quot;&gt;fonctionnalités de recadrage automagiques de Cloudinary&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://cloudinary.com/documentation/image_transformations#automatic_format_selection&quot;&gt;Optimisation du format des images&lt;/a&gt;:&lt;/strong&gt; Si je publie des images JPEG dans mes billets, Cloudinary peut envoyer des images au format WebP aux visiteurs s’il est supporté par leur navigateur. Le mois dernier, deux tiers des images servies par Cloudinary à mes visiteurs étaient au format WebP, que Cloudinary génére et sert pour moi automatiquement. C’est un gain énorme à la fois pour la performance et les forfaits de données de mes visiteurs et également pour mon quota de bande passante chez Cloudinary.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://cloudinary.com/documentation/image_transformations#automatic_quality_and_encoding_settings&quot;&gt;Optimisation de la compression d’image&lt;/a&gt;:&lt;/strong&gt; Cloudinary est capable de calculer le meilleur niveau de compression pour réduire le poids de chaque image, sans pour autant dégrader la qualité du visuel.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Persuadé que Cloudinary répondait à toutes mes attentes, il me fallait encore développer un plugin Jekyll qui puisse utliser ces fonctionalités.&lt;/p&gt;

&lt;p&gt;Après réflexion, j’ai décidé de partir avec une  &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;balise Liquid&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;cloudinary&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; qui simplifierait la publication d’image avec Cloudinary et qui était relativement simple à développer. Je me suis inspiré d’autres plugins, j’ai trouvé de l’aide sur StackOverflow quand j’en avais besoin et j’ai fini par publier la premier version du &lt;a href=&quot;https://nhoizey.github.io/jekyll-cloudinary/&quot;&gt;plugin Jekyll Cloudinary&lt;/a&gt; en juillet 2016.&lt;/p&gt;

&lt;p&gt;La syntaxe est assez intuitive :&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% cloudinary &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;preset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; path/to/img.jpg alt=&quot;alt text&quot; caption=&quot;image caption&quot; %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;À partir de cette entrée, le plugin génère le HTML de l’image responsive, en utilisant les attributs &lt;code class=&quot;highlighter-rouge&quot;&gt;srcset&lt;/code&gt; et &lt;code class=&quot;highlighter-rouge&quot;&gt;sizes&lt;/code&gt; pour la balise &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag (voir &lt;a href=&quot;https://jakearchibald.com/2015/anatomy-of-responsive-images/#varying-size-and-density&quot;&gt;la section “varier la taille et la densité” de ce billet&lt;/a&gt; pour comprendre comment fonctionnent ces attributs et &lt;a href=&quot;https://cloudfour.com/thinks/dont-use-picture-most-of-the-time/&quot;&gt;ce billet qui explique pourquoi vous devriez les utiliser plutôt que &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;, la plupart du temps&lt;/a&gt;).
L’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;srcset&lt;/code&gt; et son fallback &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; contiennent les URLs Cloudinary qui récupèrent les images originales du billet à la volée et les retaillent en plusieurs tailles alternatives.&lt;/p&gt;

&lt;p&gt;Par exemple, comme indiqué dans &lt;a href=&quot;https://nhoizey.github.io/jekyll-cloudinary/#live-example&quot;&gt;la documentation&lt;/a&gt;, ce code dans un fichier Markdown :&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% cloudinary logo /assets/logos/cloudinary.png alt=&quot;Cloudinary logo&quot; %}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;va générer le code HTML suivant :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://res.cloudinary.com/&amp;lt;cloud_name&amp;gt;/image/fetch/c_limit,w_480,q_auto,f_auto/https://&amp;lt;domain&amp;gt;/assets/logos/cloudinary.png&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;srcset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;
    https://res.cloudinary.com/&amp;lt;cloud_name&amp;gt;/image/fetch/c_limit,w_80,q_auto,f_auto/https://&amp;lt;domain&amp;gt;/assets/logos/cloudinary.png 80w,
    https://res.cloudinary.com/&amp;lt;cloud_name&amp;gt;/image/fetch/c_limit,w_240,q_auto,f_auto/https://&amp;lt;domain&amp;gt;/assets/logos/cloudinary.png 240w,
    https://res.cloudinary.com/&amp;lt;cloud_name&amp;gt;/image/fetch/c_limit,w_400,q_auto,f_auto/https://&amp;lt;domain&amp;gt;/assets/logos/cloudinary.png 400w&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;sizes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;
    (min-width: 50rem) 13rem,
    (min-width: 40rem) 25vw,
    45vw&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logo&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logo Cloudinary&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;480&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;350&quot;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Vous avez entièrement la main sur le nombre d’images générées, leurs résolutions et les attributs &lt;code class=&quot;highlighter-rouge&quot;&gt;sizes&lt;/code&gt; (qui aident le navigateur à décider quelle image télécharger).
Cela se fait à partir des options de configuration à votre disposition dans votre
fichier &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;. Voici l’extrait de mon fichier de configuration où je définis les régles pour les logos :&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;cloudinary&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;cloud_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;…&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;logo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;min_width&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;80&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;max_width&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;400&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;fallback_max_width&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;200&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;3&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;sizes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(min-width:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;50rem)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;13rem,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;(min-width:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;40rem)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;25vw,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;45vw'&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;figure&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;never&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;logo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cloud_name: …&lt;/code&gt; votre ID personnel Cloudinary&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;presets:&lt;/code&gt; englobe la liste des préréglages que vous définissez pour vote site&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;logo:&lt;/code&gt; est le nom d’un des préréglages, que j’utilise dans le tag Liquid avant le nom du fichier image&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;min_width: 80&lt;/code&gt; définit la largeur minimum d’image générée&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;max_width: 400&lt;/code&gt; définit la largeur maximale d’image générée&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fallback_max_width: 200&lt;/code&gt; définit la largeur de l’image de la solution de repli (&lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;steps: 3&lt;/code&gt; définit le nombre d’images à générer&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sizes: '(min-width: 50rem) 13rem, (min-width: 40rem) 25vw, 45vw'&lt;/code&gt; définit l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;sizes&lt;/code&gt; de l’image responsive, qui dépend du design et des breakpoints&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;figure: never&lt;/code&gt; empêche la génération d’un bloc &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;figure&amp;gt;&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;figcaption&amp;gt;&lt;/code&gt;  (Je n’en veux généralement pas sur les logos)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;attributes:&lt;/code&gt; englobe la liste d’attributs à toujours ajouter aux éléments &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; et/ou &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class: logo&lt;/code&gt; ajoute l’attribut &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; ayant pour valeur &lt;code class=&quot;highlighter-rouge&quot;&gt;logo&lt;/code&gt;, que j’utilise dans mon CSS pour m’assurer que le logo ne prenne pas plus d’un quart de la largeur de son conteneur et le fait flotter à droite.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vous pouvez définir toutes ces régles pour autant de préréglages dont vous aurez besoin.&lt;/p&gt;

&lt;p&gt;Avec ce plugin et mon compte Cloudinary, &lt;strong&gt;le temps de génération de mon site a été réduit de 90% et la capacité de stockage utilisée sur mon serveur de 60%&lt;/strong&gt; et je n’ai plus à me soucier du tout de l’optimisation de mes images. C’est un gain énorme.&lt;/p&gt;

&lt;p&gt;Et après ? Au début, je voulais permettre aux auteurs d’utiliser simplement &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#images&quot;&gt;la syntaxe Markdown pour les images&lt;/a&gt;, mais je n’y suis pas encore parvenu, malgré &lt;a href=&quot;http://stackoverflow.com/questions/35614552/with-jekyll-3-can-i-transform-a-posts-markdown-before-actual-markdown-parsing&quot;&gt;quelques&lt;/a&gt; &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/5099&quot;&gt;réponses&lt;/a&gt; &lt;a href=&quot;http://stackoverflow.com/questions/38126629/how-is-the-priority-flag-in-jekyll-plugins-supposed-to-work&quot;&gt;valables&lt;/a&gt; à mes questions du principal mainteneur de Jekyll &lt;a href=&quot;https://github.com/parkr&quot;&gt;Parker Moore&lt;/a&gt; lui-même. Il faudra que je creuse les hooks Jekyll à l’avenir.&lt;/p&gt;

&lt;p&gt;Au final, cela a était un bon moyen d’apprendre un peu de Ruby, de comprendre les rouages internes de Jekyll, comment fonctionnent les plugins et comment publier une Gem… J’ai tellement appris en peu de temps grâce à ce petit projet si utile et important à mes yeux.&lt;/p&gt;

&lt;p&gt;Bien entendu, toute aide est la bienvenue pour aider à améliorer le plugin. Il y a déjà &lt;a href=&quot;https://github.com/nhoizey/jekyll-cloudinary/issues&quot;&gt;quelques anomalies et demandes de fonctionnalités ouvertes&lt;/a&gt;. N’hésitez pas à me signaler tout problème ou à partager vos idées, voire même à contribuer via des &lt;a href=&quot;https://github.com/nhoizey/jekyll-cloudinary/pulls&quot;&gt;pull requests&lt;/a&gt; !&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Aug 2016 00:00:00 +0200</pubDate>
        <link>http://jekyll-fr.org/2016/08/31/gestion-images-responsive-avec-jekyll-cloudinary/</link>
        <guid isPermaLink="true">http://jekyll-fr.org/2016/08/31/gestion-images-responsive-avec-jekyll-cloudinary/</guid>
        
        
      </item>
    
      <item>
        <title>Entretien avec Parker Moore de Jekyll</title>
        <description>&lt;p&gt;Nous vous proposons la traduction d’un entretien de Parker Moore, le mainteneur principal de Jekyll, avec Aaron Autrand, &lt;a href=&quot;https://www.netlify.com/blog/2016/03/11/interview-with-parker-moore-from-jekyll&quot;&gt;publié le 11 mars 2016 sur le blog de la société Netlify&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.netlify.com/a3dc6515430891d6df896d718dd7e54f6941d647/99084/uploads/parker-moore-jekyll.jpg&quot; alt=&quot;Parker Moore&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alors que nous constatons une augmentation constante du nombre d’outils permettant de générer des sites statiques à destination des développeurs, profesionnels ou amateurs, aucun d’entre eux n’attire autant l’attention que &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sa popularité n’est pas vraiment surprenante quand on sait que Jekyll a été crée par un des cofondateurs de GitHub et que c’est le moteur qui fait tourner GitHub pages.&lt;/p&gt;

&lt;p&gt;Il y a quelques temps, nous avons pu assister au lancement de Jekyll 3.0, avec la &lt;a href=&quot;https://youtu.be/sPZK8w55cBQ?t=37m58s&quot;&gt;publication en direct du commit final&lt;/a&gt; pendant une présentation de Parker Moore, actuellement en charge de la maintenance de Jekyll, lors du Meetup Static Web à San Francisco. Après sa présentation, Moore a pris quelques minutes pour parler avec nous de Jekyll, de son développement et du future des sites web statiques.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Qu’est ce que vous faites quand vous ne travaillez pas sur Jekyll ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Je suis ingénieur logiciel chez Github, entreprise dans laquelle j’aide au développement du service Github Pages. Mon travail consiste aussi à maintenir Jekyll et à faire grandir la communauté autour du projet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Peux tu nous dire comment tu as été amené à t’impliquer dans Jekyll et ce qui s’est passé depuis pour aboutir à la mise en ligne de la version 3.0 de Jekyll ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Le parcours était intéressant. J’ai été améné à utiliser Jekyll pour un job d’été à l’université de Cornell. Il s’agissait de la refonte du site cals.cornell.edu, nous voulions réaliser un nouveau site, et ce de manière rapide. Nous voulions garder l’existant et le migrer sur un nouveau système. Nous avions de nouvelles maquettes et de nouveaux contenus. J’avais déjà entendu parler de Jekyll ; je l’avais déjà utilisé. J’ai réussi à convaincre mon supérieur, je ne sais pas comment j’ai fait, mais il a accepté. Pour moi, Jekyll correspondait exactement à la demande, je devais juste servir du contenu. Au final, nous avons même utilisé Jekyll pour servir des pages PHP avec un serveur LAMP qui permet d‘envoyer des Emails ou de générer des PDF. J‘ai donc utilisé un peu Jekyll à cette période et ça m’a beaucoup plu.&lt;/p&gt;

&lt;p&gt;J’ai regardé les bugs majeurs, il y en avait tellement : plus de 800 sur le dépôt, ce qui est énorme. Beaucoup trop pour un projet Open Source majeur, selon moi. J’ai perçu un besoin, j’ai pensé que j’avais suffisament de temps libre - même si ce n’était pas le cas -  pour aider la communauté sur ces corrections. Peu avant, j’étais parti travailler en Allemagne pour une société du nom de 6 Wunderkinder — l’éditeur de Wunderlist – j’ai bombardé Tom (NdT: Prester-Werner le créateur de Jekyll) d’emails, sans cesse. Au final, j’ai publié une lettre ouverte sur mon blog, ce qui avec le recul était assez fou et immature, mais qui a eu les effets escomptés. Peu de temps après, Tom m’a répondu : “Il faut qu’on parle, tu as l’air vraiment intéressé, qu’en dis-tu ?”&lt;/p&gt;

&lt;p&gt;Je venais juste d’avoir un échange avec Brandon Mathis, qui travaille sur Octopress, et il m’a ajouté comme contributeur au projet. Et ainsi j’ai pu dire à Tom : “regarde, je suis aussi contributeur d‘Octopress, je connais les sites statiques”. Brandon a du approuver ma canditature j’imagine. Quelques semaine plus tard alors que j’étais en visite chez ma sœur à San Fransisco, j’ai rencontré Tom au siège de GitHub pour parler de Jekyll pendant une heure. Il m’a donné les accès, j’ai corrigé quelques bugs et j’ai commencé à travailler sur Jekyll 1.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tu as débuté avec la 0.12.1 ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Effectivement, je l’utilisais, et il y avait tant de choses qui ne fonctionnaient pas. Je savais que je pouvais corriger tout ça ; je connaissais Ruby, j’avais fait un peu de Ruby on Rails avant, et j’avais beaucoup appris sur le développement web à cette occasion.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quelle fut ta première expérience de programmation ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;À la Rochester Institute of Technology, je m’étais rendu avec des camarades d’écoles à des journées de codes pour élèves de collège. J’avais 13 ans. Il y a eu un cours de 30 minutes sur HTML. J’ai adoré. Je n’arrêtais pas d’en écrire, encore et encore. Je changeais la couleur de fond avec un attribut… je faisais tous ces trucs bêtes et ordinaires.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Quel fut ta première rencontre avec les générateurs de site statique modernes ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Je ne me souviens pas plus loin que de mon expérience avec Jekyll à Cornell. Je savais que les générateurs de site statique marcheraient car j’avais codé du HTML, de la CSS et du JavaScript et je sais ce qu’ils font. J’ai donc décidé de partir de ça, j’ai regardé plusieurs outils et Jekyll était celui qui avait le plus d’étoiles sur Github et avait l’air d’être le plus populaire. Les gens écrivaient dessus et l’utilisaient. GitHub Pages existait déjà. Du coup j’ai emprunté cette direction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C’était donc une question de masse critique ? Il y avait pas mal de gens donc tu savais que c’était vivant et actif.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tu sors dans les endroits branchés en général non ? Je me suis dit qu’il y aurait des contributeurs. Un projet open-source a besoin de gens plus que de tout autre chose, parce qu’il y a besoin de code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;La pire chose à faire sur un forum est de poser une question et de retourner voir tous les jours s’il y a une réponse, mais toujours rien.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Personne n’a répondu !&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Que souhaites-tu aux générateurs de site statique ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Qu’ils soient mieux compris. Je les comprend et tu les comprends, mais je rêve d’un monde où ce serait le cas pour tout le monde… et j’imagine que cela arrivera, car   l’informatique s’apprend de plus en plus tôt, la création de sites web est un bon moyen pour commencer à apprendre le code. Mon plus grand souhait c’est qu’ils soient mieux compris de tous et perçus comme une vraie solution, honnête et prête pour la production, pour les sociétés intéressées dans la réalisation de sites web.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Comment est-il possible de faire cela ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Un truc dont j’ai parlé avec Christian et Matt, les fondateurs de Netlify (NdT : Service d’hébergement et de déploiement de sites statiques) ; c’est que les sites statiques, les générateurs de sites statiques, les générateurs statiques, le site statique, tout ça a l’air plutôt ennuyeux, ça sonne très technique…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Le dynamique a l’air bien plus intéressant !&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;C’est ça ! Drupal et Wordpress sont basés sur le principe de “l’installation en 1 clic”. Sur wordpress.com, il est possible d’avoir un site gratuitement avec un thème en place. C’est toutes ces petites barrières qui ne sont pas grand chose mais qui font la différence. Donc que je pense que l’accessibilité c’est important. Des entreprises comme Netlify ou CloudCannon y travaillent. Plusieurs sociétés font en sorte qu’il soit plus simple d’apprendre à construire des sites statiques. Je pense qu’il faut faire évoluer le dialogue et notre vocabulaire, pour ne pas intimider ceux qui sont en train d’apprendre ce que sont les générateurs de sites statiques. Qu’est-ce que ça veut dire un site statique ? C’est un terme qui parle de lui même site statique. Mais vous avez à apprendre la différence entre le statique et le dynamique… qui n’est pas un terme que les gens emploient tous les jours. Quelle est la dernière fois où vous avez utilisez le mot statique en dehors du cadre professionnel ?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Oui statique ça fait un peu péjoratif dans ce contexte&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oui, il faut véhiculer une vision claire, accessible et s’outiller d’un meilleur lexique. Quelque chose qui explique tout ça très bien, sans utiliser de mots qui font peur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;En tant que mainteneur de Jekyll, qu’aimerais-tu dire, communiquer à ceux qui s’intéressent aux technos autour du web statique moderne ? La tribune est à toi.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Si j’avais une tribune, je dirais “N’abandonnez pas”. Prenez  vous la tête dessus un petit moment. Si cela ne marche pas au bout d’une heure, d’un jour, allez demander de l’aide. Je dirai que ne pas abandonner et se prendre la tête sur quelque chose est la meilleure façon d’apprendre, d’affronter les problèmes. De manière générale, ma génération n’est vraiment pas douée quand il s’agit de perséverer…que ce soit travailler quelque part plus d’un an ou affronter une grande difficulté pendant plus de 15 minutes. C’est comme si tout était éphémère de nos jours, contrairement à ce que j’ai pu apprendre à travers les livres d’histoires ou les histoires que mes parents et mes grand-parents m’ont raconté. Ne pas abandonner, c’est avoir confiance dans la technologie du web statique, c’est avoir confiance dans les personnes qui développent tout ça, qui font des sites web et qui apprennent de ça, c’est avoir confiance dans notre futur.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Et lorsqu’on n’abandonne pas, on a plus de chance de faire partie de la solution, car on s’est investi dedans.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oui, c’est exactement ça.&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Apr 2016 00:00:00 +0200</pubDate>
        <link>http://jekyll-fr.org/2016/04/19/entretien-avec-parker-moore/</link>
        <guid isPermaLink="true">http://jekyll-fr.org/2016/04/19/entretien-avec-parker-moore/</guid>
        
        
      </item>
    
      <item>
        <title>JekyllConf 2016</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://jekyllconf.com/&quot;&gt;JekyllConf&lt;/a&gt; est la première conférence entièrement consacrée à Jekyll. C’est une conférence en ligne, gratuite et ouverte à tous, preuve de la volonté de partage qui anime la communauté. Elle aura lieu le samedi 7 mai prochain à partir de 19h heure française, les vidéos seront mises en ligne peu après.&lt;/p&gt;

&lt;p&gt;La première édition avait rassemblé Tom Preston-Werner, Parker Moore, Brandon Mathis ou Ben Balter, respectivement créateurs et mainteneurs de Jekyll, OctoPress et Github Pages ; outre une vision des futures améliorations possibles pour les générateurs de sites statiques, il y avait eu quelques retours d’expérience plus pratiques comme la création de &lt;em&gt;styleguide&lt;/em&gt;. Nous ne pouvons que vous inviter à aller regarder les &lt;a href=&quot;http://jekyllconf.com/2015/&quot;&gt;vidéos de l’édition de 2015&lt;/a&gt; si vous vous intéressez à Jekyll et aux gestionnaires de site statique.&lt;/p&gt;

&lt;p&gt;Le &lt;a href=&quot;http://jekyllconf.com/&quot;&gt;programme&lt;/a&gt; de cette deuxième édition s’annonce tout aussi intéressant et met encore plus l’accent sur des retours d’expérience ainsi que différents cas d’utilisation avancée de Jekyll.&lt;/p&gt;

&lt;p&gt;Cette édition permettra de constater comment Jekyll peut répondre à différentes problématiques, que ce soit générer de la documentation, tester ses CSS, prototyper ses sites web, travailler sa stratégie de contenu voire faire des choses beaucoup moins conventionnelles comme c’est le cas chez Mapbox.&lt;/p&gt;

&lt;p&gt;Les témoignages de Stack Overflow et quelques unes des meilleures agences seront surement riches en enseignements. CloudCannon nous montrera comment les utilisateurs finaux peuvent éditer des sites sous Jekyll.&lt;/p&gt;

&lt;p&gt;La conférence compte aussi plusieurs interventions sur des aspects plus techniques comme les différentes manières de déployer Jekyll : sur Amazon, déploiement continu avec Docker… d’implémenter une solution de recherche comme Algolia ou Elasticsearch ou comment gérer les images responsive.&lt;/p&gt;

&lt;p&gt;Cette deuxième édition s’annonce donc prometteuse, nous ne manquerons pas de vous faire un petit compte-rendu, promis.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Apr 2016 00:00:00 +0200</pubDate>
        <link>http://jekyll-fr.org/2016/04/14/jekyllconf-2016/</link>
        <guid isPermaLink="true">http://jekyll-fr.org/2016/04/14/jekyllconf-2016/</guid>
        
        
      </item>
    
      <item>
        <title>Frank Taillandier utilise Jekyll</title>
        <description>&lt;p&gt;Cet article est le premier d’une série qui présente des utilisateurs de Jekyll, nous commençons avec Frank Taillandier, contributeur à jekyll-fr. Si vous souhaitez vous aussi répondre à ces questions, merci de &lt;a href=&quot;https://github.com/jekyll-fr/jekyll-fr.github.io/pulls&quot;&gt;soumettre une pull request sur Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bonjour, pourrais-tu te présenter ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bonjour, je m’appelle Frank, je m’intéresse au développement web front-end depuis de nombreuses années. J’ai travaillé successivement dans le public, puis dans le privé, où j’ai contribué pendant quelques années à un CMS open-source et où j’accompagnais les équipes dans une amélioration continue. Parallèlement, je participe à l’organisation de &lt;a href=&quot;//sudweb.fr/&quot;&gt;Sud Web&lt;/a&gt;, une conférence annuelle destinées aux gens du web depuis six ans. Actuellement sans emploi, j’en profite pour &lt;a href=&quot;http://frank.taillandier.me/2016/03/08/les-gestionnaires-de-contenu-statique/&quot;&gt;m’intéresser aux gestionnaires de site statique&lt;/a&gt; et à Jekyll en particulier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pourquoi utilises-tu Jekyll ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;J’aime la philosophie des gestionnaires de site statique, leur simplicité, et le fait de pouvoir adapter la courbe d’apprentissage à son propre rythme. Jekyll est pensé dès le début comme un outil de publication de contenus versionnés et stockés en local, la transition est toute naturelle quand vous versionnez déjà du code. Vous pouvez ensuite héberger vos fichiers statiques où bon vous semble, sans avoir à configurer quoi que ce soit sur votre serveur et sans avoir peur de vous faire hacker — on l’a vu encore récemment avec la fuite d’information des &lt;em&gt;Pananama Papers&lt;/em&gt;, dont &lt;a href=&quot;http://www.numerama.com/tech/161800-panama-papers-wordpress-et-drupal-a-lorigine-de-la-fuite.html&quot;&gt;la faille d’un plugin Wordpress serait peut-être à l’origine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Le format Markdown qu’on rencontre dans de plus en plus de services est aussi à mon sens un vrai plus pour les rédacteurs. Vu qu’il est possible d’y incorporer du HTML, on dispose ainsi du meilleur des deux mondes.&lt;/p&gt;

&lt;p&gt;Enfin et c’est important il y a un très bon état d’esprit dans la communauté Jekyll. Outre le fait que ce soit inscrit noir sur blanc dans le &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;code de conduite&lt;/a&gt;, les mainteneurs du projet comme Parker Moore font un gros effort pour faciliter les contributions, &lt;a href=&quot;https://talk.jekyllrb.com/t/core-data-driven-content/2213/5?u=dirtyf&quot;&gt;il m’a même proposé de travailler avec lui sur l’apprentissage de Ruby avec Jekyll&lt;/a&gt; !&lt;/p&gt;

&lt;p&gt;Je crois comme d’autres que nous allons assister à une utilisation de plus en plus massive de ce type de solution et qu’elles vont influencer de plus en plus les architectures ; celles-ci ne seront plus forcément entièrement monolithiques. Nous assistons déjà à un rapprochement entre les CMS statiques et dynamiques, avec d’un côté l’apparition d’interfaces pour gérer du statique, des &lt;em&gt;flat&lt;/em&gt; CMS et de l’autre la possibilité de générer du statique à partir du dynamique. Les deux peuvent être complémentaires et cohabiter côte à côte. Une page d’accueil peut-être générée en statique tandis que d’autres parties avec plus d’interactions utilisateurs continuent d’être gérées avec du dynamique. Tout est possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Comment voudrais-tu voir Jekyll évoluer ?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;J’aimerais déjà voir les &lt;a href=&quot;https://github.com/github/mentorships/issues?q=is%3Aissue+is%3Aopen+label%3A%22project%3A+Jekyll%22&quot;&gt;propositions faites dans le cadre du Summer of Code&lt;/a&gt; se réaliser : internationalisation, régénération plus fine et plus rapide, générer des versions des contenus dans plusieurs formats comme &lt;code class=&quot;highlighter-rouge&quot;&gt;amp&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;epub&lt;/code&gt;, un site dédié pour les thèmes et les plugins.&lt;/p&gt;

&lt;p&gt;Jekyll a déjà huit ans et bénéficie d’un écosystème déjà assez riche pour palier le manque de fonctionnalités du cœur.&lt;/p&gt;

&lt;p&gt;Je regrette un peu le manque de vision sur le projet et jusqu’à aujourd’hui Jekyll ne bénéficiait pas encore de feuille de route, mais cela devrait être &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/roadmap/site/roadmap.md#v32&quot;&gt;chose faite&lt;/a&gt; d’ici peu. La seule fonctionnalité annoncée pour le moment est le support de &lt;a href=&quot;https://github.com/jekyll/jekyll/pull/4595&quot;&gt;l’installation des thèmes via des gems Ruby&lt;/a&gt;. C’est une bonne chose pour les nouveaux utilisateurs.&lt;/p&gt;

&lt;p&gt;Enfin j’aimerais surtout pouvoir bénéficier de services qui permettent d’enrichir les sites statiques en fonctionnalités, là aussi il y a déjà des choses intéressantes, mais il y a encore de la place pour innover.&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 00:00:00 +0200</pubDate>
        <link>http://jekyll-fr.org/2016/04/12/frank-taillandier-utilise-jekyll/</link>
        <guid isPermaLink="true">http://jekyll-fr.org/2016/04/12/frank-taillandier-utilise-jekyll/</guid>
        
        
      </item>
    
      <item>
        <title>Lancement de la communauté Jekyll France</title>
        <description>&lt;p&gt;C’est avec émotion que nous avons le plaisir de vous annoncer le lancement d’un site relayant les actualités de la communauté Jekyll en Français.&lt;/p&gt;

&lt;h2 id=&quot;pourquoi-ce-site-&quot;&gt;Pourquoi ce site ?&lt;/h2&gt;

&lt;p&gt;Nous observons actuellement un vrai engouement pour l’utilisation des gestionnaires de site statique. Du fait de son utilisation par &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;, &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; est le système le plus populaire.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll est un générateur de sites statiques écrit en Ruby… qui vous permet de développer des sites basés sur des templates dynamiques (codés avec Liquid) et des fichiers de contenus (YAML / Markdown / HTML / JSON / CSV). Jekyll n’utilise pas de base de données. Sur la base de ces fichiers, Jekyll va générer un site entièrement statique que vous pourrez ensuite déployer sur n’importe quel serveur web ou sur Github Pages.
– &lt;cite&gt;&lt;a href=&quot;https://github.com/jeromecoupe/iad_jekyll_introduction/blob/master/jekyll_introduction_fr.md#introduction-à-jekyll&quot;&gt;Introduction à Jekyll&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On observe un bouillonnement aussi bien de la communauté qui a lancé de nombreux chantiers en parallèle que de nouveaux acteurs du monde de l’édition qui utilisent Jekyll pour ses publications.&lt;/p&gt;

&lt;p&gt;Jekyll est rapide à prendre en main, cependant en fonction de besoins particuliers il est parfois intéressant d’avoir accès à des exemples de codes permettant de mettre en place le comportement désiré.&lt;/p&gt;

&lt;p&gt;Nous aimerions relayer et aggréger en Français ce qui se passe à divers endroits de la toile autour de Jekyll.&lt;/p&gt;

&lt;h2 id=&quot;son-actualit&quot;&gt;Son actualité&lt;/h2&gt;

&lt;p&gt;Les news, les conférences et appels à orateurs… tout ce qui peut toucher de près ou de loin la communauté. L’objectif est de relayer de l’information.&lt;/p&gt;

&lt;h2 id=&quot;ses-rfrences&quot;&gt;Ses références&lt;/h2&gt;

&lt;p&gt;Il existe des sites ou des articles qui font références pour l’installation, la mise en production, l’optimisation du code, la gestion du contenu… il s’agit de lister les liens que nous estimons essentiels.&lt;/p&gt;

&lt;h2 id=&quot;ses-exemples-de-code&quot;&gt;Ses exemples de code&lt;/h2&gt;

&lt;p&gt;Pour mettre en forme un menu, des catégories ou des collections, des exemples de code sont présents sur le web, pourquoi ne simplement pas présenter un cas pratique et donner un ou plusieurs exemples de code que l’on peut utiliser.&lt;/p&gt;

&lt;h2 id=&quot;ses-limites&quot;&gt;Ses limites&lt;/h2&gt;

&lt;p&gt;Jekyll c’est pratique, mais Jekyll n’a pas vocation à tout faire. Parce qu’il faut savoir utiliser les outils adaptés, nous parlerons des avantages que peuvent avoir d’autres gestionnaires de sites statiques.&lt;/p&gt;

&lt;p&gt;Nous espérons ainsi pouvoir fédérer une communauté d’utilisateurs, qui partagent leurs problématiques et leurs solutions, afin que l’utilisation de Jekyll et des gestionnaires de site statique soit plus simple pour tous.&lt;/p&gt;

&lt;p&gt;Toute contribution est la bienvenue, nous sommes &lt;a href=&quot;https://github.com/jekyll-fr/&quot;&gt;Jekyll-fr sur Github&lt;/a&gt;, &lt;a href=&quot;//twitter.com/jekyll_fr&quot;&gt;jekyll_fr sur Twitter&lt;/a&gt; et vous pouvez &lt;a href=&quot;https://jekyll-fr.herokuapp.com/&quot;&gt;vous connecter sur notre canal de discussion Slack&lt;/a&gt;, si vous souhaitez vous joindre à nous.&lt;/p&gt;

&lt;p&gt;Bon Jekyll !&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Apr 2016 00:00:00 +0200</pubDate>
        <link>http://jekyll-fr.org/2016/04/01/lancement/</link>
        <guid isPermaLink="true">http://jekyll-fr.org/2016/04/01/lancement/</guid>
        
        
      </item>
    
  </channel>
</rss>
